scp_program -> proc_run_testcase_v_1_1 (*
	
	-> rrel_params: ... (*
		-> rrel_1: rrel_in: _graph;;
	*);;

	-> rrel_operators: ... (*

	-> rrel_init: ..start (*
		<- searchElStr5;;
		-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		-> rrel_3: rrel_assign: rrel_scp_var: _node;;
		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
		-> rrel_5: rrel_fixed: rrel_scp_const: rrel_vertex;;
		
		=> nrel_then : ..pre_op1;;
		=> nrel_else : ..op_returno;;
		*);;
		
		
-> ..pre_pre_op (*
<- searchElStr5;;
-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc2;;
-> rrel_3: rrel_assign: rrel_node: rrel_link: rrel_const: rrel_scp_var: _count;;
-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
-> rrel_5: rrel_fixed: rrel_scp_const: number_of_deleted_nodes;;

=> nrel_then : ..pre_op0_1;;
=> nrel_else : ..pre_op0;;
*);;


-> ..pre_op0 (*
<- genEl;;
-> rrel_1: rrel_assign: rrel_node: rrel_link: rrel_const: rrel_scp_var: _count;;

=> nrel_goto : ..pre_op0_1;; *);;


-> ..pre_op0_1 (*
<- contAssign;;
-> rrel_1: rrel_fixed: rrel_scp_var: _count;;
-> rrel_2: rrel_fixed: rrel_scp_const: [0];;

=> nrel_goto : ..pre_op1;; *);;

			
-> ..rocket_man (*
<-printNl;;
-> rrel_1: rrel_fixed: rrel_scp_var: _count;;

=>nrel_goto: ..pre_op1;; *);;


-> ..pre_op1 (*
<- genEl;;
-> rrel_1: rrel_assign: rrel_node:rrel_scp_var : _set_A;;

=> nrel_goto : ..pre_op2;; *);;


-> ..pre_op2 (*
<- genEl;;
-> rrel_1: rrel_assign: rrel_node:rrel_scp_var : _set_B;;

=> nrel_goto : ..step1;; *);;


-> ..step1 (*
<- genElStr3;;
-> rrel_1 : rrel_fixed : rrel_scp_var : _set_A;;
-> rrel_2 : rrel_assign : rrel_pos_const_perm : rrel_scp_var : _arc;;
-> rrel_3 : rrel_fixed : rrel_scp_var : _node;;

=> nrel_goto : ..ave_start_recurs;; *);;
//////////////////////////////////////////////////////////////////////////////////////////////////


-> ..ave_start_recurs (*
<- call;;
	-> rrel_1: rrel_fixed: rrel_scp_const: visiting_round_B;;
	-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
		-> rrel_1: rrel_fixed: rrel_scp_var: _node;;
		-> rrel_2: rrel_fixed: rrel_scp_var: _node;;
		-> rrel_3: rrel_fixed: rrel_scp_var: _set_A;;
		-> rrel_4: rrel_fixed: rrel_scp_var: _graph;;
		-> rrel_5: rrel_fixed: rrel_scp_var: _set_B;;
	*);;
	-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

	=> nrel_goto: ..hail_to_the_king;;
*);;
	
-> ..hail_to_the_king (*
	<- waitReturn;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
	
	=> nrel_goto: ..finn;; *);;


//////////////////////////////////////////////////////////////////////////////////////////////////

-> ..finn (*
<- searchElStr3;;
-> rrel_1 : rrel_fixed : rrel_scp_var : _graph;;
-> rrel_2 : rrel_assign : rrel_pos_const_perm : rrel_scp_var : _arc;;
-> rrel_3 : rrel_fixed : rrel_scp_var : _set_A;;

=> nrel_then: ..del_trash;; 
=> nrel_else: ..cout_1;;*);;


-> ..cout_1 (*
<-printNl;;
-> rrel_1: rrel_fixed: rrel_scp_const: [Graph is dvudolnii ];;

=> nrel_goto: ..cout_2;; *);;


-> ..cout_2 (*
<- call;;
-> rrel_1: rrel_fixed: rrel_scp_const: proc_print_set;;
-> rrel_2: rrel_fixed: rrel_scp_const: ... (*	
-> rrel_1: rrel_fixed: rrel_scp_var: _set_A;;	*);;
-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

=> nrel_goto: ..proc_print_set_operator7;;
*);;

-> ..proc_print_set_operator7 (*
<-waitReturn;;
-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;

=> nrel_goto: ..cout_3;;*);;


////////////////////////////////////////////////////////////////////////////////

-> ..cout_3 (*
<- call;;
-> rrel_1: rrel_fixed: rrel_scp_const: proc_print_set;;
-> rrel_2: rrel_fixed: rrel_scp_const: ... (*	
-> rrel_1: rrel_fixed: rrel_scp_var: _set_B;;	*);;
-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

=> nrel_goto: ..proc_print_set_operator8;;
*);;

-> ..proc_print_set_operator8 (*
<-waitReturn;;
-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;

=> nrel_goto: ..del_trash;;*);;


//////////////////////////////////////////////////////////////////////////////


-> ..del_trash (*
<- eraseEl;;
-> rrel_1 : rrel_fixed :rrel_erase: rrel_scp_var : _set_A;;

=> nrel_goto : ..del_trash_2;; *);;


-> ..del_trash_2 (*
<- eraseEl;;
-> rrel_1 : rrel_fixed :rrel_erase: rrel_scp_var : _set_B;;

=> nrel_goto : ..op_returno;; *);;


-> ..find_ind (*
<- searchElStr5
-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc2;;
-> rrel_3: rrel_fixed: rrel_scp_var: _count;;
-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
-> rrel_5: rrel_fixed: rrel_scp_const: number_of_deleted_nodes;;
		
=> nrel_then : ..finish;;
=> nrel_else: ..identify;; *);;


-> ..identify (*
<- genElStr5
-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc2;;
-> rrel_3: rrel_fixed: rrel_scp_var: _count;;
-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
-> rrel_5: rrel_fixed: rrel_scp_const: number_of_deleted_nodes;;
		
=> nrel_goto : ..finish;; *);;


-> ..finish (*
<-printNl;;
-> rrel_1: rrel_fixed: rrel_scp_var: _count;;

=>nrel_goto: ..op_returno;; *);;


-> ..op_returno (*
<- return;; *);;

*);;
*);;
